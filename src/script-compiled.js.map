{"version":3,"sources":["script.js"],"names":[],"mappings":"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","file":"script-compiled.js","sourcesContent":["var settings = {\n    //variable names that look LIKE_THIS are constants and generally only need to be set once\n    firstRun: true, //this will display some instructions to get started on the page; set this to false to hide them.  TODO: make this actually do something\n    //these settings control how this app communicates with Trello, via the Trello API\n    TRELLO_DEVELOPER_KEY: \"ENTER_TRELLO_DEVELOPER_KEY_HERE\", //find yours at https://trello.com/1/appKey/generate\n    TRELLO_TOKEN: \"ENTER_GENERATED_TRELLO_TOKEN_HERE\",\n    TRELLO_APP_NAME: \"Trello Homework Card Creator\", //You can set this to whatever you want, ideally something you'll recognize in the future\n    TRELLO_READWRITE_AUTH_LENGTH: \"ENTER_VALUE_HERE\", //This determines how long you'll give yourself (via this app) read/write access to your Trello account.  If you are just trying this out, you can do \"1day\"; if you want this to work for the next month, enter \"30days\"; if you want this to work forever, enter \"never\"\n    TRELLO_BOARD_ID: \"ENTER_TRELLO_BOARD_ID_HERE\", //the 8-character string after 'b/' in the URL of the Trello board you want these cards to appear on\n\n    //these settings control which list(s) your cards are added to on the board you specified\n    TRELLO_LISTS: [{ LIST_NAME: \"FRIENDLY_NAME\", LIST_ID: \"ENTER_LIST_ID_HERE\" },{ LIST_NAME: \"FRIENDLY_NAME_LIST2\", LIST_ID: \"ENTER_SECOND_LIST_ID_HERE\" } ], //an array of lists you want to add cards to.  Put a nickname for the list in LIST_NAME and the list's ID in LIST_ID.  A dropdown menu to select the list you want will appear at the top if more than one is here.  An error message will appear if no list is specified here.  Do not remove the brackets around the list ID, even if you only specify one list.\n    listAddType: \"one\", //allowed values: \"one\" - only add the card to the selected list, \"all\" - add the card to all lists specified in TRELLO_LISTS\n\n    //these settings control how the card is generated; all can be dynamic; the intent is to save you time from having to do repetitive things, like adding due dates (the whole reason this was created), or assigning users, adding labels, adding a description, etc.\n    assignMyself: false, //allowed values: true - use TRELLO_USER_ID to assign yourself to the card you create; useful for showing cards in the Trello Android widget\n    TRELLO_USER_ID: \"ENTER_USERID_HERE\", //if assign myself is true, enter your Trello user id here.  You can find it by looking at one of your cards JSON outputs\n    dueDateTime: \"0900\", //the time when cards will be due, on the date you specify.  Use 24 hour time; 9AM = 0900, 9PM=2100\n    descriptionType: \"attribution\", //allowed values (You can program your own, too.): \"attribution\" - will put an italicized note saying the card was created using Trello Homework Card Creator, with a link back to the GitHub repository.  You can change this if you don't like it.  \"datetime\" - will add an italicized date and time that the card was created.  \"none\" - will show nothing and won't prompt for a description in the form  \"custom\" - will show a small textarea in the form where you can enter your own description, if you are so inclined\n    autoAddLabels: false, //allowed values: \"true\" - add the labels in LabelsToAdd to the card that is created; \"false\" (default) - don't auto-add labels\n    labelsToAdd: [], //enter label names in this array to have them added to your card, if you wish.  Leave blank to add no labels.  Enclose label names in quotes ,(e.g., label named Important would be entered as \"Important\").\n\n    //developer - don't change these values unless you know what you're doing\n    debugMode: false, //log various things that are useful for debugging in the console\n    demoMode: false, //simulate various end results of requests.  accepted values: \"success\" - pretend that the request succeeded; \"ANY_ERROR_CODE\" - enter an error code used by this app, and the app will pretend the request failed with that error code\n    today: \"\" //DO NOT CHANGE, but either way, this gets overwritten on load with the current date and time.\n};\n\n\nfunction initialize() {\n    if (settings.descriptionType === \"custom\") {\n        document.getElementById('description-group').insertAdjacentHTML('afterbegin', '<label for=\"description\" class=\"item-title\">Description:</label><br /><input id=\"description\" type=\"text\" /><br /><br />');\n    }\n\n    if (settings.TRELLO_LISTS.length > 1) {\n\n        let listsToAdd = \"\";\n        for (let i = 0; i < settings.TRELLO_LISTS.length; i++) {\n            listsToAdd += '<input type=\"radio\" id=\"list' + i + '\" value=\"' + settings.TRELLO_LISTS[i].LIST_ID + '\" name=\"lists\" /><label for=\"list' + i + '\">' + settings.TRELLO_LISTS[i].LIST_NAME + '</label><br/>';\n        }\n\n        document.getElementById('list-options').insertAdjacentHTML('beforeend', listsToAdd + '<br />')\n    } else {\n        document.getElementById('list-options').className = \"hidden\";\n    }\n    //configure due date picker\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    settings.today = moment();\n    let todayDayName = settings.today.day();\n    let relativeDays = []; //the days array translated so that today is the first element\n    for (let i = todayDayName; i <= todayDayName + 6; i++) { //todayDayName + 6 can end the loop because Saturday (todayDayName = 6) is when the value of i will be the highest.  The loop continues to 6 more days (Sunday, Monday, Tuesday, Wednesday, Thursday, Friday) before it needs to end.  Thus, if Saturday = 6, and we add 6, we get 6+6 = 12; the last day is Friday (5), and 12-7 = 5; when we reach Friday i will be 12, and the loop will end.\n        if (i > 6) { //if i is greater than 6, subtract 7 (say, if today is Friday, and i starts at 5, then Sunday will be i = 7, so 7-7 = 0, which is correct)\n            relativeDays.push(days[i - 7]);\n        } else {\n            relativeDays.push(days[i]);\n        }\n    }\n\n    let toAdd = \"\";\n    let dayNames = relativeDays;\n    dayNames[0] = \"Next \" + dayNames[0];\n    if (settings.debugMode) {\n        console.log(dayNames);\n    }\n    var dayToAdd;\n    for (i = 2; i <= relativeDays.length; i++) { //start at the day after tomorrow\n        if (i > 6) {\n            j = i - 7;\n            dayToAdd = dayNames[j];\n        } else {\n            dayToAdd = dayNames[i];\n        }\n        toAdd += '<input type=\"radio\" id=\"due-date-plus' + i + '\" value=\"' + i + '\" name=\"due-date\"> <label for=\"due-date-plus' + i + '\">' + dayToAdd + '</label><br />'; //this can apply to any value of i because only the day of the week is part of the array and needs to be corrected when i >= 7.  the id's for the radio buttons use plus_, and the Next [today] value is 7 days from now, so it should have 7 subtracted from it\n\n    }\n\n    document.getElementById('due-date-days').insertAdjacentHTML('beforeend', toAdd);\n\n\n    if (settings.debugMode) {\n        console.warn(\"Debug mode is enabled.  Disable before committing to GitHub\");\n        console.log(relativeDays);\n    }\n\n    document.getElementById('loading').className = \"hidden\";\n    document.getElementById('app').className = \"\";\n}\n\n//trelloRequest callbacks\nfunction success(evt) {\n    alert(\"Success!  Card created.\");\n\n    document.getElementById('card-info').reset(); //clear the form\n}\n\nfunction error(evt) {\n    alert(\"Eek!  There was a problem that prevented your card from being creator.  Check your internet connection and make sure there are no accents or other special characters in the card name, then try again.\");\n    if (settings.debugMode) {\n        console.error(\"The request failed.\");\n        console.error(evt);\n    }\n}\n\nfunction checkSettings() {\n    var problems = [];\n    //check for default values\n    if (settings.TRELLO_DEVELOPER_KEY === \"ENTER_TRELLO_DEVELOPER_KEY_HERE\") {\n        problems.push(\"The Trello developer key is set to the default value.  Change it to your developer key.  You can find it at https://trello.com/1/appKey/generate.\");\n    }\n    if (settings.TRELLO_TOKEN === \"ENTER_GENERATED_TRELLO_TOKEN_HERE\") {\n        problems.push(\"The Trello user token is set to the default value.  You'll need to set settings.firstRun to true to see how to solve this.\");\n    }\n    if (settings.TRELLO_BOARD_ID === \"ENTER_TRELLO_BOARD_ID_HERE\") {\n        problems.push(\"The Trello board ID is set to the default value.  The board ID is the 8-character string after b/ in the URL of the Trello board you want to send cards to.\");\n    }\n    if (settings.TRELLO_LISTS[0] === \"ENTER_LIST_IDS\" || settings.TRELLO_LISTS[0] === \"LIST_ID2\" || settings.TRELLO_LISTS[1] === \"ENTER_LIST_IDS\" || settings.TRELLO_LISTS[1] === \"LIST_ID2\") {\n        problems.push(\"The Trello list ID array contains one or more default values.  Replace them with your list IDs.  Set settings.firstRun to true and follow the instructions to resolve this issue.\");\n    }\n    if (settings.assignMyself && settings.TRELLO_USER_ID === \"ENTER_USERID_HERE\") {\n        problems.push(\"The Trello user ID is not set but assignMyself is set to true.  To resolve, either set settings.assignMyself to false or set settings.firstRun to true and follow the instructions.\");\n    }\n    try { //make sure due date selected\n        document.querySelector('input[name=\"due-date\"]:checked').value; //see if a due date was selected\n    } catch (e) {\n        problems.push(\"No due date was selected.  You must select a due date to create the card.  If you know what you are doing, you can also change the value of the due date that is sent in the request to Trello to null and comment out this try-catch statement.\");\n    }\n    if (settings.TRELLO_LISTS.length > 1) {\n        try { //make sure due date selected\n            document.querySelector('input[name=\"lists\"]:checked').value; //see if a due date was selected\n        } catch (e) {\n            problems.push(\"No list selected.  Please select a list and try again.\");\n        }\n    }\n\n\n    //make sure an assignment name was specified\n    if (document.querySelector('input[id=\"card-name\"]').value === \"\") {\n        problems.push(\"You didn't specify an assignment name.\");\n    }\n    if (problems.length > 0) { //failed\n        plural = \"s\";\n        if (problems.length === 1) {\n            plural = \"\";\n        }\n        console.error(\"Settings check failed.\");\n        for (i = 0; i < problems.length; i++) {\n            console.error(problems[i]);\n        }\n        alert(problems.length + \" error\" + plural + \" occurred.  See the console for more information.  You must resolve the errors to create cards.\");\n    } else {\n        return true; //passed\n    }\n}\n\nfunction createCard() {\n    if (!checkSettings()) {\n        console.error(\"Card creation cannot continue because the settings check failed.\");\n        return false;\n    }\n    settings.today = moment(); //make sure we're starting with the current date\n\n    let listSelected;\n    if (settings.TRELLO_LISTS.length > 1) {\n        listSelected = document.querySelector('input[name=\"lists\"]:checked').value;\n    } else {\n        listSelected = settings.TRELLO_LISTS[0].LIST_ID;\n    }\n\n    let dueDateSelected = document.querySelector('input[name=\"due-date\"]:checked').value; //We can assume this has a value because that was verified in the checkSettings() function that ran before this.  If no due date was selected, checkSettings should catch it and prevent card creation from continuing.\n    let dueDate = settings.today.add(dueDateSelected, 'd'); //Find dueDate by adding number of days necessary to the date recorded when the page was loaded (should generally be pretty close to when the card is created [in theory]).  Today adds 0, tomorrow adds 1, etc.  The values of the due date question radio buttons are the number of days to get to them (it takes 0 days to get to today, 1 to get to tomorrow, etc.)\n    //TODO: if it's now the next day, confirm the actual date the user wants for the due date\n    let dueHour = settings.dueDateTime.substring(0, 2); //get the hour for the due date from settings\n    let dueMin = settings.dueDateTime.substring(2, 4); //get the minute for the due date from settings\n    if (settings.debugMode) {\n        console.log(\"dueDate: \" + dueDate);\n        console.log(\"dueHour: \" + dueHour);\n        console.log(\"dueMin: \" + dueMin);\n    }\n    //finish setting up the due date\n    dueDate.hour(dueHour);\n    dueDate.minutes(dueMin);\n    dueDate.seconds(0); //set seconds and milliseconds to 0 so that the due date is for exactly the hour and minute specified\n    dueDate.milliseconds(0);\n\n    let assignmentName = document.querySelector('input[id=\"card-name\"]').value; //get the assignment name\n\n    //actually send the card to Trello\n    let trelloRequest = new XMLHttpRequest();\n    let url = \"https://trello.com/1/cards?key=\" + settings.TRELLO_DEVELOPER_KEY + \"&name=\" + assignmentName + \"&pos=bottom&due=\" + dueDate + \"&token=\" + settings.TRELLO_TOKEN + \"&idList=\" + listSelected + \"&idMembers=\" + settings.TRELLO_USER_ID;\n    //TO DO: add ability to select desired list in advance\n    if (settings.debugMode) {\n        console.log(url);\n    }\n    trelloRequest.addEventListener(\"load\", success, false); //keep track of status\n    trelloRequest.addEventListener(\"error\", error, false);\n    //TODO: Add better error handling.  Currently, requests that return \"401 (Unauthorized)\" are marked successful\n    trelloRequest.open(\"POST\", url);\n    trelloRequest.send();\n}\n\n"]}